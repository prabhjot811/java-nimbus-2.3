import java.util.*;

// Employee class with name, age, and salary fields
class Employee {
    private String name;
    private int age;
    private double salary;

    // Constructor
    public Employee(String name, int age, double salary) {
        this.name = name;
        this.age = age;
        this.salary = salary;
    }

    // Getters
    public String getName() { return name; }
    public int getAge() { return age; }
    public double getSalary() { return salary; }

    // Display method
    public void display() {
        System.out.printf("Name: %-10s | Age: %-3d | Salary: %.2f%n", name, age, salary);
    }
}

public class EmployeeSortingDemo {
    public static void main(String[] args) {
        // Create a list of employees
        List<Employee> employees = new ArrayList<>();
        employees.add(new Employee("Alice", 30, 70000));
        employees.add(new Employee("Bob", 25, 50000));
        employees.add(new Employee("Charlie", 35, 90000));
        employees.add(new Employee("David", 28, 60000));
        employees.add(new Employee("Eve", 32, 85000));

        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("\n====== Employee Sorting Menu ======");
            System.out.println("1. Sort by Name (A–Z)");
            System.out.println("2. Sort by Age (Ascending)");
            System.out.println("3. Sort by Salary (Descending)");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            
            while (!scanner.hasNextInt()) {
                System.out.print("Invalid input. Please enter a number: ");
                scanner.next();
            }
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    employees.sort((e1, e2) -> e1.getName().compareToIgnoreCase(e2.getName()));
                    System.out.println("\nEmployees sorted by Name:");
                    break;

                case 2:
                    employees.sort((e1, e2) -> Integer.compare(e1.getAge(), e2.getAge()));
                    System.out.println("\nEmployees sorted by Age:");
                    break;

                case 3:
                    employees.sort((e1, e2) -> Double.compare(e2.getSalary(), e1.getSalary())); // Descending
                    System.out.println("\nEmployees sorted by Salary (High → Low):");
                    break;

                case 4:
                    System.out.println("Exiting the application. Goodbye!");
                    break;

                default:
                    System.out.println("Invalid choice. Please try again.");
                    continue;
            }

            if (choice >= 1 && choice <= 3) {
                for (Employee emp : employees) {
                    emp.display();
                }
            }

        } while (choice != 4);

        scanner.close();
    }
}
